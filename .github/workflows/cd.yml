name: Release Hub

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - v*.*.*
  workflow_dispatch:
    inputs: {}

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          cache-dependency-path: |
            go.sum
            caddy/go.sum

      - name: Install fpm
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev build-essential
          sudo gem install --no-document fpm

      - name: Login to Docker Hub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Import GPG key
        if: startsWith(github.ref, 'refs/tags/v')
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Set GoReleaser Git tags
        run: |
          tags=$(git tag --list --sort=-version:refname 'v*')
          echo "GORELEASER_CURRENT_TAG=$(awk 'NR==1 {print;exit}' <<< "$tags")"  >> "$GITHUB_ENV"
          echo "GORELEASER_PREVIOUS_TAG=$(awk 'NR==2 {print;exit}' <<< "$tags")"  >> "$GITHUB_ENV"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --timeout 60m ${{ !startsWith(github.ref, 'refs/tags/v') && '--snapshot --skip=sign' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ startsWith(github.ref, 'refs/tags/v') && steps.import_gpg.outputs.fingerprint || '' }}

      - name: Attest
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "${{ github.workspace }}/dist/**/mercure"

      - name: Package as deb
        uses: bpicode/github-action-fpm@master
        with:
          fpm_args: './dist/mercure_Linux_*.tar.gz'  # Select only Linux binaries
          fpm_opts: '-n mercure -s dir -t deb -v 0.16.4 --prefix /usr/local/bin'

      - name: Package as rpm
        uses: bpicode/github-action-fpm@master
        with:
          fpm_args: './dist/mercure_Linux_*.tar.gz'
          fpm_opts: '-n mercure -s dir -t rpm -v 0.16.4 --prefix /usr/local/bin'

      - name: Package as apk
        uses: bpicode/github-action-fpm@master
        with:
          fpm_args: './dist/mercure_Linux_*.tar.gz'
          fpm_opts: '-n mercure -s dir -t apk -v 0.16.4 --prefix /usr/local/bin'


      - name: Display version
        run: dist/caddy_linux_amd64_v1/mercure version

      - name: Upload snapshot
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: snapshot
          path: dist/*
          retention-days: 1
